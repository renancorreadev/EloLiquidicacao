/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAuthorizationToken,
  IAuthorizationTokenInterface,
} from "../../../../../contracts/domain/interfaces/Authorization/IAuthorizationToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "nrid",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "participantType",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "AuthorityTokenBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "nrid",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "participantType",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "AuthorityTokenMinted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nrid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pan",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mcc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "productBin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "saleValue",
        type: "uint256",
      },
    ],
    name: "mintAuthorizationToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IAuthorizationToken__factory {
  static readonly abi = _abi;
  static createInterface(): IAuthorizationTokenInterface {
    return new Interface(_abi) as IAuthorizationTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IAuthorizationToken {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IAuthorizationToken;
  }
}
