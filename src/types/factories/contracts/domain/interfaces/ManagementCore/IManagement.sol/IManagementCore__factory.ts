/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IManagementCore,
  IManagementCoreInterface,
} from "../../../../../../contracts/domain/interfaces/ManagementCore/IManagement.sol/IManagementCore";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "participantWallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "participantType",
        type: "string",
      },
    ],
    name: "ParticipantAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "participantWallet",
        type: "address",
      },
      {
        internalType: "string",
        name: "participantType",
        type: "string",
      },
    ],
    name: "addParticipant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "participantAddress",
        type: "address",
      },
    ],
    name: "getParticipantInfo",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nrid",
        type: "uint256",
      },
    ],
    name: "getTransactionInfo",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "participantWallet",
        type: "address",
      },
    ],
    name: "getTransactionsByParticipant",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ITransactionTracker.TransactionStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "getTransactionsByStatus",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IManagementCore__factory {
  static readonly abi = _abi;
  static createInterface(): IManagementCoreInterface {
    return new Interface(_abi) as IManagementCoreInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IManagementCore {
    return new Contract(address, _abi, runner) as unknown as IManagementCore;
  }
}
