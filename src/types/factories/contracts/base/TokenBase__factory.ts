/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TokenBase,
  TokenBaseInterface,
} from "../../../contracts/base/TokenBase";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_transactionTrackerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_participantAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNridsGeneratedByThisContract",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nridToken",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionTracker",
    outputs: [
      {
        internalType: "contract TransactionTracker",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200218238038062002182833981810160405281019062000037919062000259565b838381600290805190602001906200005192919062000114565b5080600390805190602001906200006a92919062000114565b506200007b6200010f60201b60201c565b600081905550505081600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050620004db565b600090565b8280546200012290620003d2565b90600052602060002090601f01602090048101928262000146576000855562000192565b82601f106200016157805160ff191683800117855562000192565b8280016001018555821562000192579182015b828111156200019157825182559160200191906001019062000174565b5b509050620001a19190620001a5565b5090565b5b80821115620001c0576000816000905550600101620001a6565b5090565b6000620001db620001d58462000332565b62000309565b905082815260208101848484011115620001fa57620001f9620004a1565b5b620002078482856200039c565b509392505050565b6000815190506200022081620004c1565b92915050565b600082601f8301126200023e576200023d6200049c565b5b815162000250848260208601620001c4565b91505092915050565b60008060008060808587031215620002765762000275620004ab565b5b600085015167ffffffffffffffff811115620002975762000296620004a6565b5b620002a58782880162000226565b945050602085015167ffffffffffffffff811115620002c957620002c8620004a6565b5b620002d78782880162000226565b9350506040620002ea878288016200020f565b9250506060620002fd878288016200020f565b91505092959194509250565b60006200031562000328565b905062000323828262000408565b919050565b6000604051905090565b600067ffffffffffffffff82111562000350576200034f6200046d565b5b6200035b82620004b0565b9050602081019050919050565b600062000375826200037c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620003bc5780820151818401526020810190506200039f565b83811115620003cc576000848401525b50505050565b60006002820490506001821680620003eb57607f821691505b602082108114156200040257620004016200043e565b5b50919050565b6200041382620004b0565b810181811067ffffffffffffffff821117156200043557620004346200046d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620004cc8162000368565b8114620004d857600080fd5b50565b611c9780620004eb6000396000f3fe6080604052600436106100fe5760003560e01c806370a0823111610095578063a47df7a211610064578063a47df7a214610320578063a4cf2f1c1461034b578063b88d4fde14610376578063c87b56dd14610392578063e985e9c5146103cf576100fe565b806370a08231146102645780638da5cb5b146102a157806395d89b41146102cc578063a22cb465146102f7576100fe565b806318160ddd116100d157806318160ddd146101c457806323b872dd146101ef57806342842e0e1461020b5780636352211e14610227576100fe565b806301ffc9a71461010357806306fdde0314610140578063081812fc1461016b578063095ea7b3146101a8575b600080fd5b34801561010f57600080fd5b5061012a600480360381019061012591906115e2565b61040c565b6040516101379190611891565b60405180910390f35b34801561014c57600080fd5b5061015561049e565b60405161016291906118c7565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d9190611685565b610530565b60405161019f9190611808565b60405180910390f35b6101c260048036038101906101bd91906115a2565b6105af565b005b3480156101d057600080fd5b506101d96106f3565b6040516101e69190611909565b60405180910390f35b6102096004803603810190610204919061148c565b61070a565b005b6102256004803603810190610220919061148c565b610a2f565b005b34801561023357600080fd5b5061024e60048036038101906102499190611685565b610a4f565b60405161025b9190611808565b60405180910390f35b34801561027057600080fd5b5061028b6004803603810190610286919061141f565b610a61565b6040516102989190611909565b60405180910390f35b3480156102ad57600080fd5b506102b6610b1a565b6040516102c39190611808565b60405180910390f35b3480156102d857600080fd5b506102e1610b40565b6040516102ee91906118c7565b60405180910390f35b34801561030357600080fd5b5061031e60048036038101906103199190611562565b610bd2565b005b34801561032c57600080fd5b50610335610cdd565b604051610342919061186f565b60405180910390f35b34801561035757600080fd5b50610360610d35565b60405161036d91906118ac565b60405180910390f35b610390600480360381019061038b91906114df565b610d5b565b005b34801561039e57600080fd5b506103b960048036038101906103b49190611685565b610dce565b6040516103c691906118c7565b60405180910390f35b3480156103db57600080fd5b506103f660048036038101906103f1919061144c565b610ed5565b6040516104039190611891565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061046757506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104975750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060600280546104ad90611af6565b80601f01602080910402602001604051908101604052809291908181526020018280546104d990611af6565b80156105265780601f106104fb57610100808354040283529160200191610526565b820191906000526020600020905b81548152906001019060200180831161050957829003601f168201915b5050505050905090565b600061053b82610f69565b610571576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105ba82610a4f565b90508073ffffffffffffffffffffffffffffffffffffffff166105db610fc8565b73ffffffffffffffffffffffffffffffffffffffff161461063e5761060781610602610fc8565b610ed5565b61063d576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006106fd610fd0565b6001546000540303905090565b600061071582610fd5565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461077c576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080610788846110a3565b9150915061079e8187610799610fc8565b6110ca565b6107ea576107b3866107ae610fc8565b610ed5565b6107e9576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610851576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61085e868686600161110e565b801561086957600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001019190508190555061093785610913888887611114565b7c02000000000000000000000000000000000000000000000000000000001761113c565b600460008681526020019081526020016000208190555060007c0200000000000000000000000000000000000000000000000000000000841614156109bf5760006001850190506000600460008381526020019081526020016000205414156109bd5760005481146109bc578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610a278686866001611167565b505050505050565b610a4a83838360405180602001604052806000815250610d5b565b505050565b6000610a5a82610fd5565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ac9576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060038054610b4f90611af6565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7b90611af6565b8015610bc85780601f10610b9d57610100808354040283529160200191610bc8565b820191906000526020600020905b815481529060010190602001808311610bab57829003601f168201915b5050505050905090565b8060076000610bdf610fc8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c8c610fc8565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cd19190611891565b60405180910390a35050565b6060600a805480602002602001604051908101604052809291908181526020018280548015610d2b57602002820191906000526020600020905b815481526020019060010190808311610d17575b5050505050905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d6684848461070a565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610dc857610d918484848461116d565b610dc7576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610dd982610f69565b610e18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0f906118e9565b60405180910390fd5b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633c7f12f8846040518263ffffffff1660e01b8152600401610e759190611909565b60006040518083038186803b158015610e8d57600080fd5b505afa158015610ea1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610eca919061163c565b905080915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610f74610fd0565b11158015610f83575060005482105b8015610fc1575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610fe4610fd0565b1161106c5760005481101561106b5760006004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415611069575b600081141561105f576004600083600190039350838152602001908152602001600020549050611034565b809250505061109e565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e861112b8686846112cd565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611193610fc8565b8786866040518563ffffffff1660e01b81526004016111b59493929190611823565b602060405180830381600087803b1580156111cf57600080fd5b505af192505050801561120057506040513d601f19601f820116820180604052508101906111fd919061160f565b60015b61127a573d8060008114611230576040519150601f19603f3d011682016040523d82523d6000602084013e611235565b606091505b50600081511415611272576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b60009392505050565b60006112e96112e484611949565b611924565b90508281526020810184848401111561130557611304611bbc565b5b611310848285611ab4565b509392505050565b600061132b6113268461197a565b611924565b90508281526020810184848401111561134757611346611bbc565b5b611352848285611ac3565b509392505050565b60008135905061136981611c05565b92915050565b60008135905061137e81611c1c565b92915050565b60008135905061139381611c33565b92915050565b6000815190506113a881611c33565b92915050565b600082601f8301126113c3576113c2611bb7565b5b81356113d38482602086016112d6565b91505092915050565b600082601f8301126113f1576113f0611bb7565b5b8151611401848260208601611318565b91505092915050565b60008135905061141981611c4a565b92915050565b60006020828403121561143557611434611bc6565b5b60006114438482850161135a565b91505092915050565b6000806040838503121561146357611462611bc6565b5b60006114718582860161135a565b92505060206114828582860161135a565b9150509250929050565b6000806000606084860312156114a5576114a4611bc6565b5b60006114b38682870161135a565b93505060206114c48682870161135a565b92505060406114d58682870161140a565b9150509250925092565b600080600080608085870312156114f9576114f8611bc6565b5b60006115078782880161135a565b94505060206115188782880161135a565b93505060406115298782880161140a565b925050606085013567ffffffffffffffff81111561154a57611549611bc1565b5b611556878288016113ae565b91505092959194509250565b6000806040838503121561157957611578611bc6565b5b60006115878582860161135a565b92505060206115988582860161136f565b9150509250929050565b600080604083850312156115b9576115b8611bc6565b5b60006115c78582860161135a565b92505060206115d88582860161140a565b9150509250929050565b6000602082840312156115f8576115f7611bc6565b5b600061160684828501611384565b91505092915050565b60006020828403121561162557611624611bc6565b5b600061163384828501611399565b91505092915050565b60006020828403121561165257611651611bc6565b5b600082015167ffffffffffffffff8111156116705761166f611bc1565b5b61167c848285016113dc565b91505092915050565b60006020828403121561169b5761169a611bc6565b5b60006116a98482850161140a565b91505092915050565b60006116be83836117ea565b60208301905092915050565b6116d381611a1c565b82525050565b60006116e4826119bb565b6116ee81856119e9565b93506116f9836119ab565b8060005b8381101561172a57815161171188826116b2565b975061171c836119dc565b9250506001810190506116fd565b5085935050505092915050565b61174081611a2e565b82525050565b6000611751826119c6565b61175b81856119fa565b935061176b818560208601611ac3565b61177481611bcb565b840191505092915050565b61178881611a90565b82525050565b6000611799826119d1565b6117a38185611a0b565b93506117b3818560208601611ac3565b6117bc81611bcb565b840191505092915050565b60006117d4601483611a0b565b91506117df82611bdc565b602082019050919050565b6117f381611a86565b82525050565b61180281611a86565b82525050565b600060208201905061181d60008301846116ca565b92915050565b600060808201905061183860008301876116ca565b61184560208301866116ca565b61185260408301856117f9565b81810360608301526118648184611746565b905095945050505050565b6000602082019050818103600083015261188981846116d9565b905092915050565b60006020820190506118a66000830184611737565b92915050565b60006020820190506118c1600083018461177f565b92915050565b600060208201905081810360008301526118e1818461178e565b905092915050565b60006020820190508181036000830152611902816117c7565b9050919050565b600060208201905061191e60008301846117f9565b92915050565b600061192e61193f565b905061193a8282611b28565b919050565b6000604051905090565b600067ffffffffffffffff82111561196457611963611b88565b5b61196d82611bcb565b9050602081019050919050565b600067ffffffffffffffff82111561199557611994611b88565b5b61199e82611bcb565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611a2782611a66565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611a9b82611aa2565b9050919050565b6000611aad82611a66565b9050919050565b82818337600083830152505050565b60005b83811015611ae1578082015181840152602081019050611ac6565b83811115611af0576000848401525b50505050565b60006002820490506001821680611b0e57607f821691505b60208210811415611b2257611b21611b59565b5b50919050565b611b3182611bcb565b810181811067ffffffffffffffff82111715611b5057611b4f611b88565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f546f6b656e20646f6573206e6f74206578697374000000000000000000000000600082015250565b611c0e81611a1c565b8114611c1957600080fd5b50565b611c2581611a2e565b8114611c3057600080fd5b50565b611c3c81611a3a565b8114611c4757600080fd5b50565b611c5381611a86565b8114611c5e57600080fd5b5056fea2646970667358221220ded4c5bebe9e8f47dddd4591567ab8327f9d0fc5f3232766087a8e106b02f58364736f6c63430008060033";

type TokenBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenBase__factory extends ContractFactory {
  constructor(...args: TokenBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _transactionTrackerAddress: AddressLike,
    _participantAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _transactionTrackerAddress,
      _participantAddress,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _transactionTrackerAddress: AddressLike,
    _participantAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _transactionTrackerAddress,
      _participantAddress,
      overrides || {}
    ) as Promise<
      TokenBase & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenBase__factory {
    return super.connect(runner) as TokenBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenBaseInterface {
    return new Interface(_abi) as TokenBaseInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TokenBase {
    return new Contract(address, _abi, runner) as unknown as TokenBase;
  }
}
